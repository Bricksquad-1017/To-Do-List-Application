/* Reset default browser styles */
body {
    font-family: Arial, sans-serif;
    background-color: #e0f2e0; /* Display a light green background */
}

/* Title styles */
h1 {
    text-align: center; /* Center the title */
    color: #333; /* Dark grey color for the title */
    margin-bottom: 20px; /* Space below the title */
}

/* Container styles */
.container {
    max-width: 600px; /* Maximum width of the container */
    margin: auto; /* Center the container */
    background: #66ff66; /* Bright green background for the container */
    padding: 20px; /* Padding inside the container */
    border-radius: 5px; /* Rounded corners */
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); /* Light shadow around the container */
}

/* Input styles */
input[type="text"] {
    padding: 10px; /* Padding inside the input */
    border: 1px solid #ccc; /* Light grey border */
    border-radius: 5px; /* Rounded corners */
    width: calc(100% - 22px); /* Full width minus padding and border */
    margin-bottom: 10px; /* Space below the input */
}

/* Button styles */
button {
    width: 100px; /* Width of the button */
    padding: 10px; /* Padding inside the button */
    background-color: #004d00; /* Dark green button */
    color: white; /* White text color */
    border: none; /* No border */
    border-radius: 5px; /* Rounded corners */
    cursor: pointer; /* Cursor on hover */
}

/* Hover effect for yellow container */
button:hover {
    background-color: #003300; /* Darker green on hover */
}

/* Yellow container styles */
.container {
    background-color: yellow;
    padding: 20px;
    border-radius: 5px;
    width: 300px;
    transition: all 0.3s ease; /* Transition for smooth animation */
}

/* Hover effect for yellow container */
button:hover {
    background-color: #003300; /* Darker green on hover */
}

/* Task list item styles */
.completed {
    background-color: #e0f7fa; /* Light blue for completed tasks */
}

/* Task list styles */
ul {
    list-style-type:circle; /* Use circle bullets */
    padding: 0; /* Remove default padding */
}

/* Task list item styles */
li {
    background: #004d00; /* Dark green for the first task */
    color: white; /* Set text color to white for better contrast */
    margin: 10px 0; /* Margin around the list items */
    padding: 10px; /* Padding inside the list items */
    border-radius: 5px; /* Rounded corners */
    display: flex; /* Flexbox layout */
    justify-content: space-between; /* Space between items */
    border: 1px solid grey; /* Grey border around list items */
    cursor: pointer; /* Changes cursor to pointer on hover */
    transition: all 0.3s; /* Smooth transition for all properties */
}

/* Hover effect for task list items */
li:hover {
    background-color: #5cb85c; /* Optional hover effect */
}

/* First task box styles */
li:first-child {
    border: 2px solid #66ff66; /* Bright green border for the first task */
}

/* Second task box styles */
li:nth-child(2) {
    border: 2px solid #ffcc00; /* Yellow border for the second task */
}

/* Third task box styles */
li:nth-child(3) {
    border: 2px solid #ff6600; /* Orange border for the third task */
}

/* Fourth task box styles */
li:nth-child(4) {
    border: 2px solid #ff0000; /* Red border for the fourth task */
}

/* Task list item text styles */
span {
    margin-right: 10px; /* Space between bullet and text */
}

/* Task list item delete button styles */
.delete-btn {
    background-color: #ff0000; /* Red delete button color */
    color: white; /* White text color for better contrast */
    padding: 5px 10px; /* Padding inside the delete button */
    border-radius: 5px; /* Rounded corners */
    cursor: pointer; /* Changes cursor to pointer on hover */
}

/* Hover effect for delete button */
.delete-btn:hover {
    background-color: #b30000; /* Darker red on hover */
}
</style>
<body>
<h1>Task List</h1>

<div class="container">
    
        <input type="text" id="task-input" placeholder="Enter a new task...">
        <button id="add-task">Add Task</button>
    
<ul id="task-list">
    
</ul>

</div>

<script>
// Get references to HTML elements
var addTaskBtn = document.getElementById("add-task");
var taskInput = document.getElementById("task-input");
var taskList = document.getElementById("task-list");

// Add event listener for add task button
addTaskBtn.addEventListener("click", function() {

    // Create a new list item
    var listItem = document.createElement("li");

    // Add a span element with the input value
    var span = document.createElement("span");
    span.textContent = taskInput.value;
    listItem.appendChild(span);

    // Add a delete button
    var deleteBtn = document.createElement("button");
    deleteBtn.textContent = "Delete";
    deleteBtn.className = "delete-btn";
    listItem.appendChild(deleteBtn);

    // Add event listener for delete button
    deleteBtn.addEventListener("click", function() {
        listItem.remove();
    });

    // Add event listener for list item
    listItem.addEventListener("click", function() {
        if (listItem.className === "completed") {
            listItem.classList.remove("completed");
        } else {
            listItem.classList.add("completed");
        }
        
        // Move the completed task to the bottom of the list
        taskList.appendChild(listItem);
        
        // Remove the event listener from the completed task
        listItem.removeEventListener("click", arguments.callee);
        
        // Add a new event listener to the new list item
        listItem.addEventListener("click", function() {
            if (listItem.className === "completed") {
                listItem.classList.remove("completed");
            } else {
                listItem.classList.add("completed");
            }
            
            // Move the completed task to the bottom of the list
            taskList.appendChild(listItem);
            
            // Remove the event listener from the completed task
            listItem.removeEventListener("click", arguments.callee);
            
            // Add a new event listener to the new list item
            this.addEventListener("click", arguments.callee);
        });
        
    });

    
    

    
    

    
    

    
    

    
    

    
    

    
    

    
    

    
    

    
    
    
    
    
});

</script>
</body>
</html>
li:nth-child(2) {
    background: #66ff66; /* Bright green background for the second task */
}

/* Updated selector with class */
.task-item:nth-child(2) {
    background: #66ff66; /* Bright green background for the second task */
    
}
/* Third and subsequent task box styles */
/* Third and subsequent task box styles */
li:nth-child(n+3) {
    background: #b2e0b2; /* Pastel green background for third and subsequent tasks */
    /* Generated by Copilot */
}

#task-list li {
    background-color: #ffffff; /* Specific to list items in task list */
}

/* Generated by Copilot */